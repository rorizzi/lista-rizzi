{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState } from 'react';\nimport Header from \"../Components/Header\";\nimport Lista from \"../Components/Lista\";\nimport CustomModal from \"../Components/Modal\";\nimport { colors } from \"../Styles/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Layout = function Layout() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoList = _useState2[0],\n      setTodoList = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todoSelected = _useState4[0],\n      setTodoSelected = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var handleAdd = function handleAdd(input) {\n    {\n      setTodoList([].concat(_toConsumableArray(todoList), [{\n        id: Date.now(),\n        todo: input\n      }]));\n    }\n  };\n\n  var handleModal = function handleModal(todoSelected) {\n    setModalVisible(true);\n    setTodoSelected(todoSelected);\n  };\n\n  var handleDelete = function handleDelete() {\n    var todosFiltrados = todoList.filter(function (item) {\n      return item !== todoSelected;\n    });\n    setTodoList(todosFiltrados);\n    setModalVisible(false);\n  };\n\n  var handleEdit = function handleEdit(text) {\n    var todoToEdit = todoList.find(function (todo) {\n      return todo.id === todoSelected.id;\n    });\n    todoToEdit.todo = text;\n    var todoAux = [];\n    todoList.forEach(function (item) {\n      todoAux.push(item);\n    });\n    setTodoList(todoAux);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: greetingText,\n      children: \"Todo-List App!\"\n    }), _jsx(Header, {\n      handleAdd: handleAdd\n    }), _jsx(Lista, {\n      handleModal: handleModal,\n      todoList: todoList\n    }), _jsx(CustomModal, {\n      modalVisible: modalVisible,\n      setModalVisible: setModalVisible,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete,\n      todoSelected: todoSelected\n    })]\n  });\n};\n\nexport default Layout;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'black',\n    padding: 25,\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    height: '100%'\n  },\n  greetingText: {\n    color: colors.smooth\n  }\n});","map":{"version":3,"sources":["D:/React Native/list-example/Screens/Layout.js"],"names":["useState","Header","Lista","CustomModal","colors","Layout","todoList","setTodoList","todoSelected","setTodoSelected","modalVisible","setModalVisible","handleAdd","input","id","Date","now","todo","handleModal","handleDelete","todosFiltrados","filter","item","handleEdit","text","todoToEdit","find","todoAux","forEach","push","styles","container","greetingText","StyleSheet","create","backgroundColor","padding","flexDirection","justifyContent","alignItems","height","color","smooth"],"mappings":"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","sourcesContent":["import { View, StyleSheet, Text } from 'react-native'\r\nimport { useState } from 'react';\r\nimport Header from '../Components/Header';\r\nimport Lista from '../Components/Lista';\r\nimport CustomModal from '../Components/Modal';\r\nimport { colors } from '../Styles/Colors';\r\nconst Layout = () => {\r\n\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [todoSelected, setTodoSelected] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const handleAdd = (input) => {\r\n        {\r\n            setTodoList([...todoList, { id: Date.now(), todo: input }]);\r\n        }\r\n    }\r\n\r\n    const handleModal = (todoSelected) => {\r\n        setModalVisible(true);\r\n        setTodoSelected(todoSelected);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        const todosFiltrados = todoList.filter(item => item !== todoSelected);\r\n        setTodoList(todosFiltrados);\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleEdit = (text) => {\r\n        const todoToEdit = todoList.find(todo => todo.id === todoSelected.id);\r\n        // const todoListFiltered = todoList.filter(todo => todo.id !== todoSelected.id)\r\n        todoToEdit.todo = text\r\n        const todoAux = []\r\n        todoList.forEach((item) => {\r\n            todoAux.push(item)\r\n        })\r\n        setTodoList(todoAux)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={greetingText}>Todo-List App!</Text>\r\n            <Header handleAdd={handleAdd}/>\r\n            <Lista handleModal={handleModal} todoList={todoList}/>\r\n            <CustomModal\r\n                modalVisible={modalVisible}\r\n                setModalVisible = {setModalVisible}\r\n                handleEdit = {handleEdit}\r\n                handleDelete = {handleDelete}\r\n                todoSelected = {todoSelected}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'black',\r\n        padding: 25,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n    },\r\n    greetingText: {\r\n        color: colors.smooth\r\n\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}